name: Test and Build

on:
  push:
    branches:
      - main
      - dev

  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # BEGIN - Enviroment setup
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "gradle"

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4

      # END - Enviroment setup

      # BEGIN - Gradle test tasks
      - name: Test with gradle
        run: ./gradlew clean test

      - name: Test coverage with jacoco
        run: ./gradlew jacocoTestReport jacocoTestCoverageVerification

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ${{ github.workspace }}/target/site/jacoco/jacoco.xml

      # END - Gradle test tasks

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # BEGIN - Gradle build tasks
      - name: Build the app
        run: ./gradlew clean build

      # END - Gradle build tasks

  dockerize:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # BEGIN - GCP setup
      - name: Determine environment
        id: determine-env
        run: |
          # Determine environment based on branch
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "MY_PROJECT_ENV=prod" >> $GITHUB_ENV
          else
            echo "MY_PROJECT_ENV=dev" >> $GITHUB_ENV
          fi

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_DEPLOY_SA }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker ${{ secrets.GCP_LOCATION }}-docker.pkg.dev

      # END - GCP setup

      # BEGIN - Docker build
      - name: Build and Push Docker image
        run: |
          IMAGE_URI="${{ secrets.GCP_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-images/revistland-${{ env.MY_PROJECT_ENV  }}:latest"
          docker build -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"

      # END - Docker build
