name: Build

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build Jar and Dockerize
    runs-on: ubuntu-latest
    environment: "${{ github.ref_name == 'main' && 'prod' || 'dev' }}"
    env: ${{ secrets }}
    steps:
      # BEGIN - Enviroment setup
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "gradle"

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4

      # END - Enviroment setup

      # BEGIN - Gradle build tasks
      - name: Build the app
        run: ./gradlew clean build

      # END - Gradle build tasks

      # BEGIN - GCP setup
      - name: Determine environment
        id: determine-env
        run: |
          # Determine environment based on branch
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "ENV=prod" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
          fi

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_DEPLOY_SA }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker to use gcloud as a credential helper
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.GCP_REGION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_DEPLOY_SA }}

      # END - GCP setup

      # BEGIN - Docker build
      - name: Build and Push Docker image
        run: |
          IMAGE_URI="${{ secrets.GCP_LOCATION }}/pdfpedia-${{ env.ENV  }}:latest"
          docker build -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"

      # END - Docker build
